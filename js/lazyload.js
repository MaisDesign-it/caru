/*!
 * Lazy Load - JavaScript plugin for lazy loading images * Copyright (c) 2007-2017 Mika Tuupola * Licensed under the MIT license: *   http://www.opensource.org/licenses/mit-license.php * Project home: *   https://appelsiini.net/projects/lazyload * Version: 2.0.0-beta.2
 *
 */ (function(a,b){"object"==typeof exports?module.exports=b(a):"function"==typeof define&&define.amd?define([],b(a)):a.LazyLoad=b(a)})("undefined"==typeof global?this.window||this.global:global,function(a){"use strict";function b(e,f){this.settings=d(c,f||{}),this.images=e||document.querySelectorAll(this.settings.selector),this.observer=null,this.init()}const c={src:"data-src",srcset:"data-srcset",selector:".lazyload"},d=function(){let e={},f=!1,g=0,h=arguments.length;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(f=arguments[0],g++);for(let k,j=function(k){for(let l in k)Object.prototype.hasOwnProperty.call(k,l)&&(e[l]=f&&"[object Object]"===Object.prototype.toString.call(k[l])?d(!0,e[l],k[l]):k[l])};g<h;g++)k=arguments[g],j(k);return e};if(b.prototype={init:function(){if(!a.IntersectionObserver)return void this.loadImages();let e=this;this.observer=new IntersectionObserver(function(g){g.forEach(function(h){if(0<h.intersectionRatio){e.observer.unobserve(h.target);let j=h.target.getAttribute(e.settings.src),k=h.target.getAttribute(e.settings.srcset);"img"===h.target.tagName.toLowerCase()?(j&&(h.target.src=j),k&&(h.target.srcset=k)):h.target.style.backgroundImage="url("+j+")"}})},{root:null,rootMargin:"0px",threshold:[0]}),this.images.forEach(function(g){e.observer.observe(g)})},loadAndDestroy:function(){this.settings&&(this.loadImages(),this.destroy())},loadImages:function(){if(this.settings){let e=this;this.images.forEach(function(f){let g=f.getAttribute(e.settings.src),h=f.getAttribute(e.settings.srcset);"img"===f.tagName.toLowerCase()?(g&&(f.src=g),h&&(f.srcset=h)):f.style.backgroundImage="url("+g+")"})}},destroy:function(){this.settings&&(this.observer.disconnect(),this.settings=null)}},a.lazyload=function(e,f){return new b(e,f)},a.jQuery){const e=a.jQuery;e.fn.lazyload=function(f){return f=f||{},f.attribute=f.attribute||"data-src",new b(e.makeArray(this),f),this}}return b});